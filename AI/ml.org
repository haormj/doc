* 机器学习
** python 中常用的包
*** sklearn
*** numpy
*** scipy
*** matplotlib
** 基本概念
*** 数据集
*** 样本
*** 训练
*** 泛化
** 模型评估与选择
*** 评估方法
**** 留出法
直接将原始数据划分为训练和测试集
**** 交叉验证法
将数据集按照同分布划分为若干个集合,然后从中选择一个作为测试集,剩余的作为训练集
**** 自主法
*** 性能度量
** 线性回归
*** 简单理解
主要是找到一组数据的规律,通过直线去拟合这些数据,而一条直线,主要是需要求截距和斜率,为了更好的理解,就想成二维下的一条直线,如果需要求一条直接,我们给定直线上的两个点,就可以直接获取获取到这个直接,不过现在和之前的不同就在于,现在有很多组数据,而且这些数据不一定都在这个直线上,而我需要做的就是,让所有点到这条直接的距离最小,从而求这条直接就变为了让其他点到这条线的距离最小,所以现在需要考虑,如何让这个值最小,求距离最小的这个函数我们称之为代价函数,这个函数比较特殊,那就是二维曲线,而且是有最小值的,从而这个问题就转化为求二次曲线最小值的过程,按照之前学习的只是,如果知道一个二次曲线,直接通过求导,然后选择让求导知道的表达式为 0,这样求出的 x 值,就是这个二次曲线找到最小值的时候,那么在实际的分析中是否可以这样去完成吗?

不过这个内容我们可以站到巨人的肩膀上,已经有最小二乘法可以为我们解决这个问题了,从而直接了解最小二乘法就可以了,这样也让我们想到了数模的意义,就是为了让我们将实际问题转化为数学模型的过程,到了数学模型之后,我们就可以转化为计算机代码去实现,学习了简单了之后,过度到多维,因为在实际过程中,变量都是有很多的,而不是只有一个内容,不过多维的内容可以转化为二维的.
** 问题
*** 给定一组数据，如果通过分类 http://archive.ics.uci.edu/ml/datasets/Iris
*** 
** 思考
现实生活中,我们会遇到识别车牌号这样的场景,现在已经是比较常见了,基本上只要有停车场都会有这个的存在,那么现在思考下给定计算机一个图片,他告诉我们车牌号,那么输入就是图片,而输出就是文本,现在如果你需要做这个需求,需要怎么进行呢?这就是现实中遇到的问题,我们学习的目的不就是为了解决实际问题吗?如果没有这个机器,那么每次都需要人人来处理,而且这个工作很是繁琐,而机器就适合做这些可以流程化,而且不会烦躁,扯远了.

在开始学习的过程中,会遇到一些概念不太了解,有时候对于直观的内容容易了解和认识,样本空间/假设空间



